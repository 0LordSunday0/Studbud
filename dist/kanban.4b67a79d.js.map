{"mappings":"AAAA,mbAMmB,CAEnB,MAAM,UAAU,GAAG,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,AAAC;AAC3D,MAAM,UAAU,GAAG,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,AAAC;AAE3D,UAAU,CAAC,OAAO,CAAC,CAAA,SAAS,GAAI;IAC5B,SAAS,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAM;QAC1C,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC;KACtC,CAAC;IAEF,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAM;QACxC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC;KACzC,CAAC;CACL,CAAC;AAEF,UAAU,CAAC,OAAO,CAAC,CAAA,SAAS,GAAI;IAC5B,SAAS,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAM;QACzC,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC;QACrD,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC;KACnC,CAAC;CACL,CAAC","sources":["public/kanban.js"],"sourcesContent":["/*The following code is almost a one to one of a youtube tutorial.\r\nI wasnt trying to copy but its pretty hard to refactor this into my\r\nown work. To prove my understanding, we use queryselectorall to get the\r\ncollection of elements of the class draggable, we then add an event\r\nlistener that watches these elements and applies a class to them if\r\nthey are dragged. We can use this logic structure to move cards on\r\nour kanban board */\r\n\r\nconst draggables = document.querySelectorAll('.draggable');\r\nconst containers = document.querySelectorAll('.container');\r\n\r\ndraggables.forEach(draggable => {\r\n    draggable.addEventListener('dragstart', () => {\r\n        draggable.classList.add('dragging')\r\n    })\r\n\r\n    draggable.addEventListener('dragend', () => {\r\n        draggable.classList.remove('dragging')\r\n    })\r\n})\r\n\r\ncontainers.forEach(container => {\r\n    container.addEventListener('dragover', () => {\r\n        const draggable = document.querySelector('.dragging')\r\n        container.appendChild(draggable)\r\n    })\r\n})"],"names":[],"version":3,"file":"kanban.4b67a79d.js.map","sourceRoot":"/__parcel_source_root/"}