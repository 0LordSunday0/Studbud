{"mappings":"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","sources":["public/kanban.js"],"sourcesContent":["/*The following code is almost a one to one of a youtube tutorial.\r\nI wasnt trying to copy but its pretty hard to refactor this into my\r\nown work. To prove my understanding, we use queryselectorall to get the\r\ncollection of elements of the class draggable, we then add an event\r\nlistener that watches these elements and applies a class to them if\r\nthey are dragged. We can use this logic structure to move cards on\r\nour kanban board */\r\n\r\nvar draggables = document.querySelectorAll('.draggable');\r\nvar containers = document.querySelectorAll('.container');\r\n\r\ndraggables.forEach(draggable => {\r\n    draggable.addEventListener('dragstart', () => {\r\n        draggable.classList.add('dragging')\r\n    })\r\n\r\n    draggable.addEventListener('dragend', () => {\r\n        draggable.classList.remove('dragging')\r\n    })\r\n})\r\n\r\ncontainers.forEach(container => {\r\n    container.addEventListener('dragover', () => {\r\n        const draggable = document.querySelector('.dragging')\r\n        container.appendChild(draggable)\r\n    })\r\n})\r\n\r\nconst form = document.getElementById(\"taskform\");\r\nconst button = document.querySelector(\"#taskform > button\");\r\nvar taskInput = document.getElementById(\"taskInput\");\r\nvar row1 = document.getElementById(\"row-1-container\");\r\nvar dueDateInput = document.getElementById(\"dueDateInput\");\r\nvar priorityInput = document.getElementById(\"priorityInput\");\r\n\r\nform.addEventListener(\"submit\", function(event){\r\n  event.preventDefault();\r\n  let task = taskInput.value;\r\n  let dueDate = dueDateInput.value;\r\n  let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\r\n  addTask(task, dueDate, priorityRating, false);\r\n})\r\n\r\nvar taskListArray = [];\r\n\r\nfunction addTask(taskDescription, dueDate, priorityRating, completionStatus) {\r\n  let d = new Date();\r\n  let dateCreated = d.getFullYear();\r\n  let task = {\r\n    taskDescription,\r\n    dueDate,\r\n    dateCreated,\r\n    priorityRating,\r\n    completionStatus\r\n  };\r\n  taskListArray.push(task);\r\n  renderTask(task);\r\n}\r\n\r\nfunction renderTask(task){\r\n  // Create HTML elements\r\n  let card = document.createElement('div');\r\n  let item = document.createElement(\"p\");\r\n  item.innerHTML = task.taskDescription + \" \" + task.dueDate + \" \" + task.priorityRating;\r\n\r\n  card.appendChild(item);\r\n  card.classList.add('draggable');\r\n  card.draggable = true;\r\n  row1.appendChild(card);\r\n\r\n  // Extra Task DOM elements\r\n  let delButton = document.createElement(\"button\");\r\n  let delButtonText = document.createTextNode(\"Completed\");\r\n  delButton.appendChild(delButtonText);\r\n  delButton.draggable = true;\r\n  card.appendChild(delButton);\r\n\r\n\r\n  // Event Listeners for DOM elements\r\n  delButton.addEventListener(\"click\", function(event){\r\n    event.preventDefault();\r\n    card.remove();\r\n  })\r\n  card.addEventListener('dragstart', () => {\r\n    card.classList.add('dragging')\r\n})\r\n\r\n    card.addEventListener('dragend', () => {\r\n        card.classList.remove('dragging')\r\n    })\r\n\r\n    card.addEventListener('dragover', () => {\r\n        const draggable = document.querySelector('.dragging')\r\n        card.appendChild(draggable)\r\n    })\r\n\r\n\r\n  // Clear the input form\r\n  form.reset();\r\n  \r\n}"],"names":[],"version":3,"file":"kanban.4b67a79d.js.map","sourceRoot":"/__parcel_source_root/"}